{"ast":null,"code":"//import SockJS from 'sockjs-client';\n//import { Stomp } from '@stomp/stompjs';\nimport { Client } from '@stomp/stompjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction CourseChatComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\", 13)(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const chatMessage_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chatMessage_r2);\n  }\n}\nexport let CourseChatComponent = /*#__PURE__*/(() => {\n  class CourseChatComponent {\n    constructor(route, authService) {\n      this.route = route;\n      this.authService = authService;\n      this.chatMessages = [];\n    }\n    ngOnInit() {\n      this.courseId = Number(this.route.snapshot.paramMap.get('courseId'));\n      this.connect();\n    }\n    connect() {\n      //const ws = new SockJS('/api/stomp');\n      //this.stompClient = Stomp.over(ws);\n      // this.stompClient.connect({'X-Authorization' : 'Bearer ' + this.authService.getToken()}, frame => {   \n      //   console.log('Connected: ' + frame);\n      //   this.subscribeToCourseChat();\n      // });\n      this.stompClient = new Client({\n        brokerURL: 'ws://localhost:8080/api/stomp',\n        connectHeaders: {\n          'X-Authorization': 'Bearer ' + this.authService.getToken()\n        },\n        onConnect: () => {\n          this.subscribeToCourseChat();\n        }\n      });\n      this.stompClient.activate();\n    }\n    sendMessage() {\n      this.stompClient.publish({\n        \"destination\": '/app/chat',\n        \"body\": JSON.stringify({\n          \"sender\": this.sender,\n          \"courseId\": this.courseId,\n          \"text\": this.text\n        })\n      });\n    }\n    subscribeToCourseChat() {\n      this.stompClient.subscribe('/topic/courseChat/' + this.courseId, message => {\n        const senderAndText = message.body;\n        this.chatMessages.push(senderAndText);\n      });\n    }\n    static #_ = this.ɵfac = function CourseChatComponent_Factory(t) {\n      return new (t || CourseChatComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.AuthService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: CourseChatComponent,\n      selectors: [[\"app-course-chat\"]],\n      decls: 19,\n      vars: 4,\n      consts: [[1, \"container\"], [1, \"chat-content\"], [1, \"card\"], [1, \"list-group\", \"list-group-flush\"], [\"class\", \"list-group-item\", 4, \"ngFor\", \"ngForOf\"], [3, \"ngSubmit\"], [\"productForm\", \"ngForm\"], [1, \"form-group\", \"col-2\", \"p-3\"], [\"for\", \"sender\"], [\"type\", \"text\", \"id\", \"sender\", \"required\", \"\", \"name\", \"sender\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"text\"], [\"type\", \"text\", \"id\", \"text\", \"required\", \"\", \"name\", \"text\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", \"m-3\"], [1, \"list-group-item\"]],\n      template: function CourseChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h1\");\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"div\", 1)(4, \"div\", 2)(5, \"ul\", 3);\n          i0.ɵɵtemplate(6, CourseChatComponent_li_6_Template, 3, 1, \"li\", 4);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(7, \"form\", 5, 6);\n          i0.ɵɵlistener(\"ngSubmit\", function CourseChatComponent_Template_form_ngSubmit_7_listener() {\n            return ctx.sendMessage();\n          });\n          i0.ɵɵelementStart(9, \"div\", 7)(10, \"label\", 8);\n          i0.ɵɵtext(11, \"Sender\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"input\", 9);\n          i0.ɵɵlistener(\"ngModelChange\", function CourseChatComponent_Template_input_ngModelChange_12_listener($event) {\n            return ctx.sender = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(13, \"div\", 7)(14, \"label\", 10);\n          i0.ɵɵtext(15, \"Text\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"input\", 11);\n          i0.ɵɵlistener(\"ngModelChange\", function CourseChatComponent_Template_input_ngModelChange_16_listener($event) {\n            return ctx.text = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(17, \"button\", 12);\n          i0.ɵɵtext(18, \"Send\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"Chat room of course \", ctx.courseId, \"\");\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngForOf\", ctx.chatMessages);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.sender);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngModel\", ctx.text);\n        }\n      },\n      dependencies: [i3.NgForOf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm]\n    });\n  }\n  return CourseChatComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}